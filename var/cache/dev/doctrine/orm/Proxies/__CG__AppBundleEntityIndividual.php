<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Individual extends \AppBundle\Entity\Individual implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'uuid', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'medicalId', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'firstName', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'lastName', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'active', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'seizure', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'bowel', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'notes', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'objectives'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'uuid', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'medicalId', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'firstName', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'lastName', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'active', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'seizure', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'bowel', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'notes', '' . "\0" . 'AppBundle\\Entity\\Individual' . "\0" . 'objectives'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Individual $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getUuid()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getUuid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUuid', []);

        return parent::getUuid();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedicalId($medicalId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedicalId', [$medicalId]);

        return parent::setMedicalId($medicalId);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedicalId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedicalId', []);

        return parent::getMedicalId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function addNote(\AppBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNote', [$note]);

        return parent::addNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNote(\AppBundle\Entity\Note $note)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNote', [$note]);

        return parent::removeNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function addObjective(\AppBundle\Entity\Objective $objective)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addObjective', [$objective]);

        return parent::addObjective($objective);
    }

    /**
     * {@inheritDoc}
     */
    public function removeObjective(\AppBundle\Entity\Objective $objective)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeObjective', [$objective]);

        return parent::removeObjective($objective);
    }

    /**
     * {@inheritDoc}
     */
    public function getObjectives()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObjectives', []);

        return parent::getObjectives();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeizure($seizure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeizure', [$seizure]);

        return parent::setSeizure($seizure);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeizure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeizure', []);

        return parent::getSeizure();
    }

    /**
     * {@inheritDoc}
     */
    public function setBowel($bowel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBowel', [$bowel]);

        return parent::setBowel($bowel);
    }

    /**
     * {@inheritDoc}
     */
    public function getBowel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBowel', []);

        return parent::getBowel();
    }

}
